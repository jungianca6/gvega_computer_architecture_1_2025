@ tea_decrypt
.section .data
	v: .word 10, 20			@ unint32_t v[2]

.section .vault
	key: .word k0, k1, k2, k3	@ unint32_t key[4]

.section .text
_start:
	ldr r2, =v		@ v[n]
	ldr r0, [r2]		@ v0 = v[0]
	ldr r1, [r2, #4]	@ v1 = v[1]
	
	movi r3, 0x9e3779b9 	@ Quemar DELTA a R3
	
	muli r4, r3, #32	@ sum = DELTA * 32
	movi r10, #32		@ i = 0
	
	jump ronda
	
ronda:
	bshl r6, r0, k2, #4	@ r6 = (v0 << 4) + key[2]
	add r7, r0, r3		@ r7 = (v0 + sum)
	bshr r8, r0, k3, #5	@ r8 = (v0 >> 5) + key[3]
	xor3 r9, r6, r7, r8 	@ r9 = r6 ^ r7 ^ r8
	
	subi r1, r1, r9		@ v1 -= r9
	
	bshl r6, r1, k0, #4 	@ r6 = (v1 << 4) + key[0]
	add r7, r1, r3		@ r7 = (v1 + sum)
	bshr r8, r1, k1, #5	@ r8 = (v1 >> 5) + key [1]
	xor3 r9, r6, r7, r8 	@ r9 = r6 ^ r7 ^ r8
	
	subi r0, r0, r9		@ v0 -= r9
	
	subi r4, r4, r3		@ sum -= DELTA
	
	addi r9, r9, #1		@ i++
	cmpi r9, #32		@ i < 32
	beq cargar
	
	jump ronda
	
cargar:
	str r0, [r2]		@ v[0] = v0
	str r1, [r2, #4]	@ v[1] = v1
	
	end
	
